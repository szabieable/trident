# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design Trident 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections
## Leadscrew Rotation Distance          [stepper_z], [stepper_z1], [stepper_z2]
## Z Endstop Switch location            [safe_z_home] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## PID tune                             [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

## [include klicky-probe.cfg]
[include TEST_SPEED.cfg]
[include stealthburner_leds.cfg]
[include macro.cfg]
[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
#serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_0C001C001950534841313020-if00
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_0C001C001950534841313020-if00
##baud: 250000
restart_method: command

[include octo_pins.cfg]
[include adxl.cfg]

[mcu EBB]
#canbus_uuid: 35d2d078a958
canbus_uuid: 1cc45c9b42aa


##--------------------------------------------------------------------
[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu

[temperature_sensor ebb_temp]
sensor_type: temperature_mcu
sensor_mcu: EBB

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3000             #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#[mcu rpi]
#serial: /tmp/klipper_host_mcu
#[adxl345]
#cs_pin: rpi:None
#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    150, 150, 20  # an example
#[input_shaper]
#shaper_freq_x: 49.8
#shaper_type_x: mzv
#shaper_freq_y: 58.8
#shaper_type_y: 3hump_ei
#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: ^!EBB:PB3
position_min: 0
position_endstop: 303
position_max: 305
homing_speed: 80   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400  #set to 400 for 0.9 degree stepper
endstop_pin: ESTOP6
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 60  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

##  Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: MOT2_STEP
dir_pin: !MOT2_DIR
enable_pin: !MOT2_EN
rotation_distance: 4    
microsteps: 32
## endstop_pin: ESTOP7
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: 0.8
## All builds use same Max Z
position_max: 250
position_min: -8
homing_speed: 8.0 # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: MOT2_CS
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 1
#driver_TOFF: 3

##  Z1 Stepper - Rear Center
##  Connected to MOTOR_3
[stepper_z1]
step_pin: MOT3_STEP
dir_pin: !MOT3_DIR
enable_pin: !MOT3_EN
rotation_distance: 4  
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: MOT3_CS
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 1
#driver_TOFF: 3

##  Z2 Stepper - Front Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: MOT4_STEP
dir_pin: !MOT4_DIR
enable_pin: !MOT4_EN
rotation_distance: 4  
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: MOT4_CS
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 1
#driver_TOFF: 3


#####################################################################
#   Extruder
#####################################################################

#   Connected to MOTOR_6
#   Heater - HE0
#   Thermistor - T0
[extruder]
step_pin: EBB:PD0
dir_pin: !EBB:PD1
enable_pin: !EBB:PD2
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
## rotation_distance: 21.2510116 #21.6847058   #Bondtech 5mm Drive Gears
rotation_distance: 22
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10               #BMG Gear Ratio
microsteps: 32
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: EBB:PB13
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
## sensor_type: NTC 100K MGB18-104F39050L32
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: EBB:PA3
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
max_extrude_only_distance: 250
max_extrude_only_velocity: 75.0
max_extrude_only_accel: 2500
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##  Try to keep pressure_advance below 1.0
pressure_advance: 0.025
##  Default is 0.040, leave stock
pressure_advance_smooth_time: 0.030

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: EBB:PA15
run_current: 0.4


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PA1
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: Generic 3950
sensor_pin: TB
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.9
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

[temperature_sensor chamber]
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: T0
#####################################################################
#   Probe
#####################################################################
#[z_calibration]
#nozzle_xy_position:   170,300
#switch_xy_position:   165,282
#bed_xy_position:      150,150
#switch_offset:        0.45
#max_deviation: 4.0
#start_gcode:          Attach_Probe
#before_switch_gcode: <macro name for attaching the probe AFTER probing the nozzle>
#end_gcode:            Dock_Probe

[exclude_object]
[probe]
##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling

# Select the probe port by type:
## For the PROBE port. Will not work with Diode. May need pull-up resistor from signal to 24V.
pin: ^EBB:PB9
## For the DIAG_7 port. NEEDS BAT85 DIODE! Change to !PG15 if probe is NO.
#pin: ^PG15
## For Octopus Pro Probe port; NPN and PNP proximity switch types can be set by jumper
#pin: ~!PC5

#--------------------------------------------------------------------

x_offset: 0
## y_offset: 25.0
y_offset: 0
#z_offset: 0
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.010
samples_tolerance_retries: 3
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - FAN0
pin: EBB:PA1
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
##  Hotend Fan - FAN1
pin: EBB:PA0
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[controller_fan controller_fan]
##  Controller fan - FAN2
pin: PD12
max_power: 0.4
kick_start_time: 0.1

[controller_fan controller_fan2]
##  Controller fan - FAN2
pin: PD14
max_power: 0.4
kick_start_time: 0.100

[fan_generic exhaust_fan]
##  Exhaust fan - FAN3
pin: PD15
cycle_time: 0.05

[fan_generic BedInner]
pin: PD13
#cycle_time: 0.05
kick_start_time: 0.5

#####################################################################
#   LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - HE2 Connector (Optional)
#pin: PB10
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
home_xy_position:150,150
speed:50
z_hop:10

[z_tilt]
##  Use Z_TILT_ADJUST to level the bed .
##  z_positions: Location of toolhead
## Uncomment below for 300mm build
z_positions:
   -50, 18
   150, 348
   350, 18
points:
   30, 5
   150, 245
   270, 5

##--------------------------------------------------------------------

speed: 200
horizontal_move_z: 20
retries: 5
retry_tolerance: 0.009


#####################################################################
#   Displays
#####################################################################

##  Uncomment the display that you have
#--------------------------------------------------------------------

#[display]
##  RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

#--------------------------------------------------------------------

[input_shaper]
shaper_freq_x: 74.4
shaper_type_x: zv
shaper_freq_y: 49.2
shaper_type_y: mzv


[neopixel chamber]
pin: PB0
chain_count: 40
color_order: GRB
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0

[display]
##  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

[neopixel btt_mini12864]
##  To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------
[bed_mesh]
speed: 500
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 260,260
fade_start: 0.26
fade_end: 2
probe_count: 5,5
algorithm: bicubic
relative_reference_index: 12

#####################################################################
#   Macros
#####################################################################
[include brush.cfg]

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - PLEASE CUSTOMISE THE SCRIPT
gcode:
# Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    {% set chamber = params.CHAMBER|default(0)|int %}
    M117 Homing...                 ; display message

    SAVE_GCODE_STATE NAME=start

    M117 Starting warmup
    G1 Z20 F3000                       ; move nozzle away from bed
    M117 Warmup
    M104 S140                                                                            ; set hotend to no-ooze temp
    M140 S{bedtemp}                                                                          ; set bed to target temp
    G28                                                                                  ; home
    G90                                                                                  ; absolute positioning
    {% if printer["temperature_sensor chamber"].temperature < chamber %}                 ; - if chamber is not at temp yet:
        HEATSOAK T={bedtemp} MOVE=1                                                          ;   heatsoak macro + park in center
        M190 S{bedtemp}                                                                      ;   wait for bed final temp
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chamber}           ;   wait for chamber final temp
    {% else %}                                                                           ; - if chamber is already at temp:
        {% if printer.heater_bed.temperature < (bedtemp-2) %}                                ; -- but bed is not fully heated (within 2C):
            HEATSOAK T={bedtemp} MOVE=1                                                      ;       heatsoak and park
            M190 S{bedtemp}                                                                  ;       wait for bed final temp
        {% else %}                                                                       ; -- and bed is already heated:
            HEATSOAK T={bedtemp} MOVE=0                                                      ;       "heatsoak" without parking (only still calling this because it does some other things like turn off exahaust fan)
        {% endif %}
    {% endif %}                         ; set bed temp and wait for it reach temp
    SET_LOGO_LEDS_BY_NAME COLOR="WHITE"                                                  ; set logo LEDs back to white
    M106 S0
    BED_MESH_CLEAR
    G28                                ; Home XYZ and do QGL
    M109 S180              ; M109 heat and wait for it to reach temp
    G1 E-1.0 F1500                 ; retract filament
    CLEAN_NOZZLE
    ## ATTACH_PROBE_LOCK
    Z_TILT_ADJUST
    G28 Z
    G0 X150 Y150 Z30 F3600
    BED_MESH_CALIBRATE AREA_START={params.AREA_START} AREA_END={params.AREA_END}
    G28 Z
    G0 Z20
    ## DOCK_PROBE_UNLOCK
    #M109 S{hotendtemp-40}              ; M109 heat and wait for it to reach temp
    #G1 E-1.0 F1500                 ; retract filament
    #CLEAN_NOZZLE
    #G28
    ## CALIBRATE_Z
    M109 S{hotendtemp}
    
    #BED_MESH_PROFILE LOAD=default

#    G1 Z5 F5000                        ; move head 5mm from bed surface
#    M83                                ; Make the E relative independant of other axis
#    M117 Purging
#    PURGE_BUCKET
    #G1 E2 F1500 # unretract
    M117 Starting Print
    #RESTORE_GCODE_STATE NAME=start

   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro LED_CHAMBER_OFF]
gcode:
  SET_LED LED=chamber RED=0 GREEN=0 BLUE=0

[gcode_macro LED_CHAMBER_ON]
gcode:
  SET_LED LED=chamber RED=1 GREEN=1 BLUE=1

[delayed_gcode shutdown_machine]
gcode:
     {action_call_remote_method("shutdown_machine")}
initial_duration: 0.0
[menu __main __poweroff]
type: command
enable: {printer.idle_timeout.state != "Printing"}
name: Turn off Pi
gcode:
     M117 Shutdown_RPI
     M118 Shutdown_RPI
     { menu.exit() }    
     UPDATE_DELAYED_GCODE ID=shutdown_machine DURATION=1 

[gcode_shell_command backup_cfg]
command: sh /home/pi/autocommit.sh
timeout: 30.
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
    RUN_SHELL_COMMAND CMD=backup_cfg

[virtual_sdcard]
path: ~/printer_data/gcodes

[display_status]

[pause_resume]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 40.717
#*# pid_ki = 0.794
#*# pid_kd = 522.198
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 22.990
#*# pid_ki = 2.254
#*# pid_kd = 58.625
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.020625, 0.023750, 0.025000, 0.024375, -0.035000
#*# 	-0.002500, -0.011250, 0.009375, 0.017500, -0.035000
#*# 	-0.036250, -0.001250, 0.000000, -0.006875, -0.041875
#*# 	-0.038750, -0.038750, -0.007500, -0.028125, -0.045000
#*# 	-0.108125, -0.059375, -0.043125, -0.035000, -0.088125
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 260.0
#*# mesh_x_pps = 2
#*# max_x = 260.0
#*#
#*# [probe]
#*# z_offset = -0.925
